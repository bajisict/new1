---
// Props
const { id, name, price, image_url, description, category, rating } = Astro.props;
import AddToCartButton from "../components/AddToCartButton.astro";

const formatPrice = (price: number) => {
  return new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD",
  }).format(price);
};

const getStarRating = (rating: number) => {
  const fullStars = Math.floor(rating);
  const hasHalfStar = rating % 1 !== 0;
  const emptyStars = 5 - Math.ceil(rating);
  return {
    full: fullStars,
    half: hasHalfStar,
    empty: emptyStars,
  };
};

const stars = getStarRating(rating);
---

<div class="product-card" data-product-id={id}>
  <div class="product-image">
    <img src={image_url} alt={name} loading="lazy" />
    <div class="category-badge">{category}</div>
  </div>

  <div class="product-info">
    <h3 class="product-name">{name}</h3>

    <div class="rating">
      {Array.from({ length: stars.full }).map((_, i) => (
        <span class="star filled" key={`full-${i}`}>★</span>
      ))}
      {stars.half && <span class="star half">★</span>}
      {Array.from({ length: stars.empty }).map((_, i) => (
        <span class="star empty" key={`empty-${i}`}>★</span>
      ))}
      <span class="rating-value">({rating})</span>
    </div>

    <p class="product-description">{description}</p>

    <div class="product-footer">
      <span class="price">{formatPrice(price)}</span>
      <AddToCartButton id={id} name={name} price={price} image={image_url} />
    </div>
  </div>
</div>

<style>
  .product-card {
    background: #fff;
    border: 1px solid #e5e5e5;
    border-radius: 12px;
    box-shadow: none;
    overflow: hidden;
    transition: transform 0.2s ease, border-color 0.2s ease;
    max-width: 320px;
    margin: 0 auto;
  }

  .product-card:hover {
    transform: translateY(-3px);
    border-color: #000;
  }

  .product-image {
    position: relative;
    height: 200px;
    overflow: hidden;
  }

  .product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .product-card:hover .product-image img {
    transform: scale(1.05);
  }

  .category-badge {
    position: absolute;
    top: 12px;
    right: 12px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .product-info {
    padding: 20px;
  }

  .product-name {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 8px 0;
    color: #1a1a1a;
    line-height: 1.3;
  }

  .rating {
    display: flex;
    align-items: center;
    gap: 2px;
    margin-bottom: 12px;
  }

  .star {
    font-size: 1rem;
    color: #ddd;
  }

  .star.filled {
    color: #ffc107;
  }

  .star.half {
    background: linear-gradient(90deg, #ffc107 50%, #ddd 50%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .rating-value {
    margin-left: 8px;
    font-size: 0.875rem;
    color: #666;
  }

  .product-description {
    color: #666;
    font-size: 0.875rem;
    line-height: 1.5;
    margin: 0 0 16px 0;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .product-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 12px;
  }

  .price {
    font-size: 1.5rem;
    font-weight: 700;
    color: #4b4b4d;
  }

  @media (max-width: 768px) {
    .product-card {
      max-width: 100%;
    }

    .product-footer {
      flex-direction: column;
      gap: 12px;
    }
  }
</style>
